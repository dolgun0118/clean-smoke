{"version":3,"file":"index.js","sources":["../dist-src/core.js","../dist-src/index.js"],"sourcesContent":["import { isFunctionLike, visitEachChild, } from 'typescript';\n/**\n * Create a ReactRefresh transformer for TypeScript.\n *\n * This transformer should run in the before stage.\n *\n * This transformer requires TypeScript to be at least 4.0.\n */\nexport default function (opts = {}) {\n    const ts = opts.ts;\n    if (!ts)\n        throw new Error('Please provide typescript by options.ts');\n    {\n        const [major] = ts.version.split('.');\n        if (parseInt(major) < 4)\n            throw new Error('TypeScript should be at least 4.0');\n    }\n    return (context) => {\n        const { factory } = context;\n        const refreshReg = factory.createIdentifier(opts.refreshReg || '$RefreshReg$');\n        const refreshSig = factory.createIdentifier(opts.refreshSig || '$RefreshSig$');\n        return (file) => {\n            if (file.isDeclarationFile)\n                return file;\n            const containHooksLikeOrJSX = file.languageVariant === ts.LanguageVariant.JSX || file.text.includes('use');\n            if (!containHooksLikeOrJSX)\n                return file;\n            // TODO: change to scan comment?\n            const globalRequireForceRefresh = file.text.includes('@refresh reset');\n            const topLevelDeclaredName = new Set();\n            // Collect top level local declarations\n            for (const node of file.statements) {\n                if (ts.isFunctionDeclaration(node) && node.name)\n                    topLevelDeclaredName.add(node.name.text);\n                if (ts.isVariableStatement(node)) {\n                    for (const decl of node.declarationList.declarations) {\n                        if (ts.isIdentifier(decl.name)) {\n                            topLevelDeclaredName.add(decl.name.text);\n                        }\n                        // ? skip for deconstructing pattern\n                    }\n                }\n            }\n            // track all JSX usage and transform non-top level hooks\n            const { nextFile, usedAsJSXElement, hooksSignatureMap } = visitDeep(file, topLevelDeclaredName, globalRequireForceRefresh);\n            file = nextFile;\n            return updateStatements(file, (statements) => ts.visitLexicalEnvironment(statements, (node) => visitTopLevel(usedAsJSXElement, hooksSignatureMap, node), context));\n        };\n        // Only visit top level declaration to find possible components\n        function visitTopLevel(usedAsJSXElement, hooksSignatureMap, node) {\n            if (ts.isFunctionDeclaration(node)) {\n                if (!node.name || !node.body)\n                    return node;\n                return [node, ...registerComponent(node.name)];\n            }\n            else if (ts.isVariableStatement(node)) {\n                const deferredStatements = [];\n                const nextDeclarationList = ts.visitEachChild(node.declarationList, (declaration) => {\n                    if (!ts.isVariableDeclaration(declaration))\n                        return declaration;\n                    const init = declaration.initializer;\n                    // Not handle complex declaration. e.g. [a, b] = [() => ..., () => ...]\n                    // or declaration without initializer\n                    if (!ts.isIdentifier(declaration.name) || !init)\n                        return declaration;\n                    const declarationUsedAsJSX = usedAsJSXElement.has(declaration.name.text);\n                    if (declarationUsedAsJSX || isFunctionExpressionLikeOrFunctionDeclaration(init)) {\n                        if (!unwantedComponentLikeDefinition(init)) {\n                            deferredStatements.push(...registerComponent(declaration.name));\n                        }\n                        if (isFunctionExpressionLikeOrFunctionDeclaration(init) && hooksSignatureMap.has(init)) {\n                            /**\n                             * const Comp = () => <Comp />\n                             * const Comp2 = function () { return <Comp /> }\n                             *\n                             * Reserve the function name\n                             *\n                             * See https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-assignment-operators-runtime-semantics-evaluation\n                             */\n                            // this is a workaround to https://github.com/Jack-Works/react-refresh-transformer/issues/8\n                            // I don't have time to refactor it yet.\n                            let oneShot = false;\n                            const sig = visitEachChild(hooksSignatureMap.get(init), (node) => oneShot\n                                ? node\n                                : isFunctionLike(node)\n                                    ? (oneShot = declaration.name)\n                                    : node, context);\n                            deferredStatements.push(factory.createExpressionStatement(sig));\n                        }\n                        return declaration;\n                    }\n                    if (isHigherOrderComponentLike(init)) {\n                        const { registers, call } = registerHigherOrderComponent(hooksSignatureMap, init, declaration.name.text);\n                        deferredStatements.push(...registers, ...registerComponent(declaration.name));\n                        return factory.updateVariableDeclaration(declaration, declaration.name, undefined, declaration.type, call);\n                    }\n                    return declaration;\n                }, context);\n                return [\n                    factory.updateVariableStatement(node, node.modifiers, nextDeclarationList),\n                    ...deferredStatements,\n                ];\n            }\n            else if (ts.isExportAssignment(node)) {\n                if (isHigherOrderComponentLike(node.expression)) {\n                    const { registers, call } = registerHigherOrderComponent(hooksSignatureMap, node.expression, '%default%');\n                    const temp = createTempVariable();\n                    return [\n                        factory.updateExportAssignment(node, node.modifiers, factory.createAssignment(temp, call)),\n                        createComponentRegisterCall(temp, '%default%'),\n                        ...registers,\n                    ];\n                }\n                else if (isFunctionExpressionLikeOrFunctionDeclaration(node.expression)) {\n                    const expr = hooksSignatureMap.get(node.expression);\n                    if (expr) {\n                        return factory.updateExportAssignment(node, node.modifiers, expr);\n                    }\n                }\n            }\n            return node;\n        }\n        function registerComponent(name) {\n            if (!startsWithLowerCase(name.text)) {\n                const temp = createTempVariable();\n                // uniq = name\n                const assignment = factory.createAssignment(temp, name);\n                // $reg$(uniq, \"name\")\n                return [factory.createExpressionStatement(assignment), createComponentRegisterCall(temp, name.text)];\n            }\n            return [];\n        }\n        /**\n         * Please call isHOCLike before call this function\n         */\n        function registerHigherOrderComponent(hooksSignatureMap, callExpr, nameHint) {\n            // Recursive case, if it is x(y(...)), recursive with y(...) to get inner expr\n            const arg0 = callExpr.arguments[0];\n            if (ts.isCallExpression(arg0)) {\n                const tempVar = createTempVariable();\n                const nextNameHint = nameHint + '$' + printNode(callExpr.expression);\n                const { registers, call: innerResult } = registerHigherOrderComponent(hooksSignatureMap, arg0, nextNameHint);\n                return {\n                    call: factory.updateCallExpression(callExpr, callExpr.expression, void 0, [\n                        factory.createAssignment(tempVar, innerResult),\n                        ...callExpr.arguments.slice(1),\n                    ]),\n                    registers: registers.concat(createComponentRegisterCall(tempVar, nextNameHint)),\n                };\n            }\n            // Base case, it is x(function () {...}) or x(() => ...) or x(Identifier)\n            if (!isFunctionExpressionLikeOrFunctionDeclaration(arg0) && !ts.isIdentifier(arg0)) {\n                throw new Error('This is an error of react-refresh/typescript. Please report this problem: Call isHOC before register it');\n            }\n            if (ts.isIdentifier(arg0))\n                return { call: callExpr, registers: [] };\n            const tempVar = createTempVariable();\n            return {\n                call: factory.updateCallExpression(callExpr, callExpr.expression, void 0, [\n                    factory.createAssignment(tempVar, hooksSignatureMap.get(arg0) || arg0),\n                    ...callExpr.arguments.slice(1),\n                ]),\n                registers: [createComponentRegisterCall(tempVar, nameHint + '$' + printNode(callExpr.expression))],\n            };\n        }\n        function createTempVariable() {\n            return factory.createTempVariable(context.hoistVariableDeclaration, true);\n        }\n        /**\n         * ! This function does not consider variable shadowing !\n         */\n        function visitDeep(file, topLevelDeclaredName, globalRequireForceRefresh) {\n            const usedAsJSXElement = new Set();\n            const containingHooksOldMap = new Map();\n            const hooksSignatureMap = new Map();\n            function trackHooks(comp, call) {\n                const arr = containingHooksOldMap.get(comp) || [];\n                arr.push(call);\n                containingHooksOldMap.set(comp, arr);\n            }\n            function visitor(node) {\n                // Collect JSX create info\n                // <abc /> or <abc>\n                if (ts.isJsxOpeningLikeElement(node)) {\n                    const tag = node.tagName;\n                    if (ts.isIdentifier(tag) && !isIntrinsicElement(tag)) {\n                        const name = tag.text;\n                        if (topLevelDeclaredName.has(name))\n                            usedAsJSXElement.add(name);\n                    }\n                    // Not tracking other kinds of tagNames like <A.B /> or <A:B />\n                }\n                else if (isJSXConstructingCallExpr(node)) {\n                    const arg0 = node.arguments[0];\n                    if (arg0 && ts.isIdentifier(arg0)) {\n                        const name = arg0.text;\n                        if (topLevelDeclaredName.has(name))\n                            usedAsJSXElement.add(name);\n                    }\n                }\n                if (isReactHooksCall(node)) {\n                    const parent = findAncestor(node, isFunctionExpressionLikeOrFunctionDeclaration);\n                    if (parent)\n                        trackHooks(parent, node);\n                }\n                const oldNode = node;\n                // Collect hooks\n                node = ts.visitEachChild(node, visitor, context);\n                const hooksCalls = containingHooksOldMap.get(oldNode);\n                if (hooksCalls && isFunctionExpressionLikeOrFunctionDeclaration(node) && node.body) {\n                    const hooksTracker = createTempVariable();\n                    const createHooksTracker = factory.createExpressionStatement(factory.createBinaryExpression(hooksTracker, factory.createToken(ts.SyntaxKind.EqualsToken), factory.createCallExpression(refreshSig, undefined, [])));\n                    // @ts-ignore This is a private API.\n                    context.addInitializationStatement(createHooksTracker);\n                    const callTracker = factory.createCallExpression(hooksTracker, void 0, []);\n                    const nextBody = ts.isBlock(node.body)\n                        ? updateStatements(node.body, (r) => [factory.createExpressionStatement(callTracker), ...r])\n                        : factory.createComma(callTracker, node.body);\n                    const newFunction = updateBody(node, nextBody);\n                    const hooksSignature = hooksCallsToSignature(hooksCalls);\n                    const { force: forceRefresh, hooks: hooksArray } = needForceRefresh(hooksCalls);\n                    const requireForceRefresh = forceRefresh || globalRequireForceRefresh;\n                    if (ts.isFunctionDeclaration(newFunction)) {\n                        if (newFunction.name) {\n                            hooksSignatureMap.set(newFunction, createHooksRegisterCall(hooksTracker, newFunction.name, hooksSignature, requireForceRefresh, hooksArray));\n                        }\n                        node = newFunction;\n                    }\n                    else {\n                        const wrapped = createHooksRegisterCall(hooksTracker, newFunction, hooksSignature, requireForceRefresh, hooksArray);\n                        hooksSignatureMap.set(newFunction, wrapped);\n                        node = newFunction;\n                        // if it is an inner decl, we can update it safely\n                        if (findAncestor(oldNode.parent, ts.isFunctionLike))\n                            node = wrapped;\n                    }\n                }\n                return updateStatements(node, addSignatureReport);\n            }\n            function addSignatureReport(statements) {\n                const next = [];\n                for (const statement of statements) {\n                    // Don't want to do a type guard here cause it is safe\n                    const signatureReport = hooksSignatureMap.get(statement);\n                    next.push(statement);\n                    if (signatureReport)\n                        next.push(factory.createExpressionStatement(signatureReport));\n                }\n                return next;\n            }\n            const nextFile = updateStatements(ts.visitEachChild(file, visitor, context), addSignatureReport);\n            return {\n                nextFile,\n                usedAsJSXElement,\n                hooksSignatureMap,\n            };\n        }\n        function printNode(node) {\n            try {\n                return node.getText();\n            }\n            catch {\n                return '';\n            }\n        }\n        function hooksCallsToSignature(calls) {\n            const signature = calls\n                .map((x) => {\n                let assignTarget = '';\n                if (x.parent && ts.isVariableDeclaration(x.parent)) {\n                    assignTarget = printNode(x.parent.name);\n                }\n                let hooksName = printNode(x.expression);\n                let shouldCaptureArgs = 0; // bit-wise parameter position\n                if (ts.isPropertyAccessExpression(x.expression)) {\n                    const left = x.expression.expression;\n                    if (ts.isIdentifier(left) && left.text === 'React') {\n                        hooksName = printNode(x.expression.name);\n                    }\n                }\n                if (hooksName === 'useState')\n                    shouldCaptureArgs = 1 << 0;\n                else if (hooksName === 'useReducer')\n                    shouldCaptureArgs = 1 << 1;\n                const args = x.arguments.reduce((last, val, index) => {\n                    if ((1 << index) & shouldCaptureArgs) {\n                        if (last)\n                            last += ',';\n                        last += printNode(val);\n                    }\n                    return last;\n                }, '');\n                return `${hooksName}{${assignTarget}${args ? `(${args})` : ''}}`;\n            })\n                .join('\\n');\n            if (opts.emitFullSignatures !== true && opts.hashSignature) {\n                try {\n                    return opts.hashSignature(signature);\n                }\n                catch (e) { }\n            }\n            return signature;\n        }\n        function needForceRefresh(calls) {\n            const externalHooks = [];\n            return {\n                hooks: externalHooks,\n                force: calls.some((x) => {\n                    const ownerFunction = findAncestor(x, isFunctionExpressionLikeOrFunctionDeclaration);\n                    const callee = x.expression;\n                    if (!ownerFunction)\n                        return true;\n                    if (ts.isPropertyAccessExpression(callee)) {\n                        const left = callee.expression;\n                        if (ts.isIdentifier(left)) {\n                            if (left.text === 'React')\n                                return false;\n                            const hasDecl = hasDeclarationInScope(ownerFunction, left.text);\n                            if (hasDecl)\n                                externalHooks.push(callee);\n                            return !hasDecl;\n                        }\n                        return true;\n                    }\n                    else if (ts.isIdentifier(callee)) {\n                        if (isBuiltinHook(callee.text))\n                            return false;\n                        const hasDecl = hasDeclarationInScope(ownerFunction, callee.text);\n                        if (hasDecl)\n                            externalHooks.push(callee);\n                        return !hasDecl;\n                    }\n                    return true;\n                }),\n            };\n        }\n        /**\n         * @param instance The identifier of the sig instance\n         * @param component The binding component\n         * @param signature The signature of the function\n         * @param forceRefresh Does forceRefresh enabled?\n         * @param trackers A list of custom hooks references\n         */\n        function createHooksRegisterCall(instance, component, signature, forceRefresh, trackers) {\n            const args = [component];\n            if (signature.includes('\\n'))\n                args.push(factory.createNoSubstitutionTemplateLiteral(signature, signature));\n            else\n                args.push(factory.createStringLiteral(signature));\n            if (forceRefresh || trackers.length)\n                args.push(forceRefresh ? factory.createTrue() : factory.createFalse());\n            if (trackers.length)\n                args.push(factory.createArrowFunction(void 0, void 0, [], void 0, factory.createToken(ts.SyntaxKind.EqualsGreaterThanToken), factory.createArrayLiteralExpression(trackers)));\n            return factory.createCallExpression(instance, void 0, args);\n        }\n        function createComponentRegisterCall(id, name) {\n            return factory.createExpressionStatement(factory.createCallExpression(refreshReg, void 0, [id, factory.createStringLiteral(name)]));\n        }\n        function updateStatements(node, f) {\n            if (ts.isSourceFile(node)) {\n                const sf = factory.updateSourceFile(node, f(node.statements), node.isDeclarationFile, node.referencedFiles, node.typeReferenceDirectives, node.hasNoDefaultLib, node.libReferenceDirectives);\n                return sf;\n            }\n            if (ts.isCaseClause(node)) {\n                const caseClause = factory.updateCaseClause(node, node.expression, f(node.statements));\n                return caseClause;\n            }\n            if (ts.isDefaultClause(node)) {\n                const defaultClause = factory.updateDefaultClause(node, f(node.statements));\n                return defaultClause;\n            }\n            if (ts.isModuleBlock(node)) {\n                const modBlock = factory.updateModuleBlock(node, f(node.statements));\n                return modBlock;\n            }\n            if (ts.isBlock(node)) {\n                const block = factory.updateBlock(node, f(node.statements));\n                return block;\n            }\n            return node;\n        }\n        function updateBody(node, nextBody) {\n            if (ts.isFunctionDeclaration(node)) {\n                if (!ts.isBlock(nextBody))\n                    throw new TypeError();\n                return factory.updateFunctionDeclaration(node, node.modifiers, node.asteriskToken, node.name, node.typeParameters, node.parameters, node.type, nextBody);\n            }\n            else if (ts.isFunctionExpression(node)) {\n                if (!ts.isBlock(nextBody))\n                    throw new TypeError();\n                return factory.updateFunctionExpression(node, node.modifiers, node.asteriskToken, node.name, node.typeParameters, node.parameters, node.type, nextBody);\n            }\n            else if (ts.isArrowFunction(node)) {\n                return factory.updateArrowFunction(node, node.modifiers, node.typeParameters, node.parameters, node.type, node.equalsGreaterThanToken, nextBody);\n            }\n            return node;\n        }\n    };\n    function isBuiltinHook(hookName) {\n        switch (hookName) {\n            case 'useState':\n            case 'useReducer':\n            case 'useEffect':\n            case 'useLayoutEffect':\n            case 'useMemo':\n            case 'useCallback':\n            case 'useRef':\n            case 'useContext':\n            case 'useImperativeHandle':\n            case 'useDebugValue':\n            case 'useTransition':\n            case 'useDeferredValue':\n                return true;\n            default:\n                return false;\n        }\n    }\n    function hasDeclarationInScope(node, name) {\n        while (node) {\n            if (ts.isSourceFile(node) && hasDeclaration(node.statements, name))\n                return true;\n            if (ts.isBlock(node) && hasDeclaration(node.statements, name))\n                return true;\n            node = node.parent;\n        }\n        return false;\n    }\n    // This function does not consider uncommon and unrecommended practice like declare use var in a inner scope\n    function hasDeclaration(nodes, name) {\n        for (const node of nodes) {\n            if (ts.isVariableStatement(node)) {\n                for (const decl of node.declarationList.declarations) {\n                    // binding pattern not checked\n                    if (ts.isIdentifier(decl.name) && decl.name.text === name)\n                        return true;\n                }\n            }\n            else if (ts.isImportDeclaration(node)) {\n                const clause = node.importClause;\n                const defaultImport = clause && clause.name;\n                const namedImport = clause && clause.namedBindings;\n                if (defaultImport && defaultImport.text === name)\n                    return true;\n                if (namedImport && ts.isNamespaceImport(namedImport)) {\n                    if (namedImport.name.text === name)\n                        return true;\n                }\n                else if (namedImport && ts.isNamedImports(namedImport)) {\n                    const hasBinding = namedImport.elements.some((x) => x.name.text === name);\n                    if (hasBinding)\n                        return true;\n                }\n            }\n            else if (ts.isFunctionDeclaration(node)) {\n                if (!node.body)\n                    continue;\n                if (node.name && node.name.text === name)\n                    return true;\n            }\n        }\n        return false;\n    }\n    function isIntrinsicElement(id) {\n        return id.text.includes('-') || startsWithLowerCase(id.text) || id.text.includes(':');\n    }\n    function isImportOrRequireLike(expr) {\n        if (!ts.isCallExpression(expr))\n            return false;\n        const callee = expr.expression;\n        if (callee.kind === ts.SyntaxKind.ImportKeyword)\n            return true;\n        if (ts.isIdentifier(callee) && callee.text.includes('require'))\n            return true;\n        return false;\n    }\n    function isReactHooksCall(expr) {\n        if (!ts.isCallExpression(expr))\n            return false;\n        const callee = expr.expression;\n        if (ts.isIdentifier(callee) && callee.text.startsWith('use'))\n            return true;\n        if (ts.isPropertyAccessExpression(callee) && callee.name.text.startsWith('use'))\n            return true;\n        return false;\n    }\n    function findAncestor(node, callback) {\n        while (node) {\n            const result = callback(node);\n            if (result === 'quit') {\n                return undefined;\n            }\n            else if (result) {\n                return node;\n            }\n            node = node.parent;\n        }\n        return undefined;\n    }\n    /**\n     * If it return true, don't track it even it is used as JSX component\n     */\n    function unwantedComponentLikeDefinition(expr) {\n        if (isImportOrRequireLike(expr))\n            return true;\n        // `const A = B.X` or `const A = X`\n        if (ts.isIdentifier(expr) || ts.isPropertyAccessExpression(expr))\n            return true;\n        if (ts.isConditionalExpression(expr))\n            return (unwantedComponentLikeDefinition(expr.condition) ||\n                unwantedComponentLikeDefinition(expr.whenFalse) ||\n                unwantedComponentLikeDefinition(expr.whenTrue));\n        return false;\n    }\n    function isHigherOrderComponentLike(outExpr) {\n        let expr = outExpr;\n        if (!ts.isCallExpression(outExpr))\n            return false;\n        while (ts.isCallExpression(expr) && !isImportOrRequireLike(expr)) {\n            const callee = expr.expression;\n            // x.y() or x()\n            const isValidCallee = ts.isPropertyAccessExpression(callee) || ts.isIdentifier(callee);\n            if (isValidCallee) {\n                expr = expr.arguments[0]; // check if arg is also a HOC\n                if (!expr)\n                    return false;\n            }\n            else\n                return false;\n        }\n        const isValidHOCArg = isFunctionExpressionLikeOrFunctionDeclaration(expr) ||\n            (ts.isIdentifier(expr) && !startsWithLowerCase(expr.text));\n        return isValidHOCArg;\n    }\n    function isFunctionExpressionLikeOrFunctionDeclaration(node) {\n        if (ts.isFunctionDeclaration(node))\n            return true;\n        if (ts.isArrowFunction(node))\n            return true;\n        if (ts.isFunctionExpression(node))\n            return true;\n        return false;\n    }\n    /**\n     * If the call expression seems like \"jsx(...)\" or \"xyz.jsx(...)\"\n     */\n    function isJSXConstructingCallExpr(call) {\n        if (!ts.isCallExpression(call))\n            return false;\n        const callee = call.expression;\n        let f = '';\n        if (ts.isIdentifier(callee))\n            f = callee.text;\n        if (ts.isPropertyAccessExpression(callee))\n            f = callee.name.text;\n        if (['createElement', 'jsx', 'jsxs', 'jsxDEV'].includes(f))\n            return true;\n        return false;\n    }\n}\nfunction startsWithLowerCase(str) {\n    return str[0].toLowerCase() === str[0];\n}\n","// Node wrapper\nimport core from './core';\nimport typescript from 'typescript';\nimport crypto from 'crypto';\nconst nodeWrapper = function (option = {}) {\n    return core({\n        ts: typescript,\n        hashSignature: (signature) => crypto.createHash('sha1').update(signature).digest('base64'),\n        ...option,\n    });\n};\n// Our build tool chain doesn't allow use to write export = nodeWrapper\nObject.assign(nodeWrapper, { default: nodeWrapper });\nmodule.exports = nodeWrapper;\nmodule.exports.__esModule = true;\n// Give it a correct typing\nexport default nodeWrapper;\n"],"names":["opts","ts","Error","major","version","split","parseInt","context","factory","refreshReg","createIdentifier","refreshSig","file","isDeclarationFile","containHooksLikeOrJSX","languageVariant","LanguageVariant","JSX","text","includes","globalRequireForceRefresh","topLevelDeclaredName","Set","node","statements","isFunctionDeclaration","name","add","isVariableStatement","decl","declarationList","declarations","isIdentifier","nextFile","usedAsJSXElement","hooksSignatureMap","visitDeep","updateStatements","visitLexicalEnvironment","visitTopLevel","body","registerComponent","deferredStatements","nextDeclarationList","visitEachChild","declaration","isVariableDeclaration","init","initializer","declarationUsedAsJSX","has","isFunctionExpressionLikeOrFunctionDeclaration","unwantedComponentLikeDefinition","push","oneShot","sig","get","isFunctionLike","createExpressionStatement","isHigherOrderComponentLike","registers","call","registerHigherOrderComponent","updateVariableDeclaration","undefined","type","updateVariableStatement","modifiers","isExportAssignment","expression","temp","createTempVariable","updateExportAssignment","createAssignment","createComponentRegisterCall","expr","startsWithLowerCase","assignment","callExpr","nameHint","arg0","arguments","isCallExpression","tempVar","nextNameHint","printNode","innerResult","updateCallExpression","slice","concat","hoistVariableDeclaration","containingHooksOldMap","Map","trackHooks","comp","arr","set","visitor","isJsxOpeningLikeElement","tag","tagName","isIntrinsicElement","isJSXConstructingCallExpr","isReactHooksCall","parent","findAncestor","oldNode","hooksCalls","hooksTracker","createHooksTracker","createBinaryExpression","createToken","SyntaxKind","EqualsToken","createCallExpression","addInitializationStatement","callTracker","nextBody","isBlock","r","createComma","newFunction","updateBody","hooksSignature","hooksCallsToSignature","force","forceRefresh","hooks","hooksArray","needForceRefresh","requireForceRefresh","createHooksRegisterCall","wrapped","addSignatureReport","next","statement","signatureReport","getText","calls","signature","map","x","assignTarget","hooksName","shouldCaptureArgs","isPropertyAccessExpression","left","args","reduce","last","val","index","join","emitFullSignatures","hashSignature","e","externalHooks","some","ownerFunction","callee","hasDecl","hasDeclarationInScope","isBuiltinHook","instance","component","trackers","createNoSubstitutionTemplateLiteral","createStringLiteral","length","createTrue","createFalse","createArrowFunction","EqualsGreaterThanToken","createArrayLiteralExpression","id","f","isSourceFile","sf","updateSourceFile","referencedFiles","typeReferenceDirectives","hasNoDefaultLib","libReferenceDirectives","isCaseClause","caseClause","updateCaseClause","isDefaultClause","defaultClause","updateDefaultClause","isModuleBlock","modBlock","updateModuleBlock","block","updateBlock","TypeError","updateFunctionDeclaration","asteriskToken","typeParameters","parameters","isFunctionExpression","updateFunctionExpression","isArrowFunction","updateArrowFunction","equalsGreaterThanToken","hookName","hasDeclaration","nodes","isImportDeclaration","clause","importClause","defaultImport","namedImport","namedBindings","isNamespaceImport","isNamedImports","hasBinding","elements","isImportOrRequireLike","kind","ImportKeyword","startsWith","callback","result","isConditionalExpression","condition","whenFalse","whenTrue","outExpr","isValidCallee","isValidHOCArg","str","toLowerCase","nodeWrapper","option","core","typescript","crypto","createHash","update","digest","Object","assign","default","module","exports","__esModule"],"mappings":"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"}